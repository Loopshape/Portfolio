title = "Layouten"
url = "/templating"
layout = "Raw"
hidden = "0"
robot_index = "index"
robot_follow = "follow"
child_of = "mey_no_parent"
hide_crumb = "0"
remove_crumb_trail = "0"
crumb_disabled = "0"
==
<h3 class="teaserHeadline">
	<i class="fa fa-wrench"></i>&nbsp;<strong>Templating</strong>
</h3>
<p>&nbsp;</p>
<h4>
	<strong>
		<span class="resizeBigger">VOM SKRIBBLE ZUM FERTIGEN PIXELLAYOUT:</span>
	</strong>
</h4>
<p class="linkImages">
	<strong>
		01.&nbsp;Grobe Entwurfsskizze auf Papier festhalten.<br />
		<br />
		<br />
		02.&nbsp;Mit einem Bildbearbeitungsprogramm die Grundfarben festlegen.<br />
		<a href="/storage/app/media/Screenshots/HEX_colors_website_table.jpg" class="fancybox">
		<img class="img hastip" src="/storage/app/media/Screenshots/HEX_colors_website_table.jpg" title="HEX color tables" alt="HEX color tables" />
		</a>
		<br />
		<br />
		03.&nbsp;Einen UTF8-Texteditor verwenden, um das HTML5-Basisgerüst zu erstellen.<br />
		<a href="/storage/app/media/Screenshots/Aptana_UTF8_SFTP_Editor.jpg" class="fancybox">
		<img class="img hastip" src="/storage/app/media/Screenshots/Aptana_UTF8_SFTP_Editor.jpg" title="Aptana3 IDE" alt="Aptana3 IDE" />
		</a>
		<br />
		<br />
		04.&nbsp;Mit CSS3 die Flächen in der Debugfunktion im Browser entsprechend zur Position bringen und ggfs. kolorieren.<br />
		<a href="/storage/app/media/Screenshots/Browser_Debug_Element_Positioning.jpg" class="fancybox">
		<img class="img hastip" src="/storage/app/media/Screenshots/Browser_Debug_Element_Positioning.jpg" title="ChromeBrowser Debug Window" alt="ChromeBrowser Debug Window" />
		</a>
		<br />
		<br />
		05.&nbsp;Mit dem Bildbearbeitungsprogramm einige Bildformate und/oder Texturen erstellen, die via CSS3 in das HTML5-Grundgerüst eingebettet werden.<br />
		<br />
		<br />
		06.&nbsp;Diverse Contentbereiche wie zB. HEADER, CONTENTBODY, SIDEBAR, FOOTER etc. mit Optimierungen der jeweiligen HTML5-Struktur und den entsprechenden CSS3-Anweisungen kombinieren.<br />
		<br />
		<br />
		07.&nbsp;Einzelne Flächen nun mit groben Content versehen (Bilder, Texte, Multimediaformate sowie Links) und dabei die Gesetze der Wahrnehmung beachten (C.R.A.P. Visual-Rules).<br />
		<br />
		<br />
		08.&nbsp;Abschließend die feinen Elemente in das Template platzieren und pixelgenau ansetzen (Icons, Logos, Banners und ggfs. Symbole).<br />
		<a href="/storage/app/media/Screenshots/Combined_Header_with_Content.jpg" class="fancybox">
		<img class="img hastip" src="/storage/app/media/Screenshots/Combined_Header_with_Content.jpg" title="Combined Layout with Elements" alt="Combined Layout with Elements" />
		</a>
		<br />
		<br />
		09.&nbsp;Je nach Einsatzgebiet der Website die HTML5-Struktur auf Barrierefreiheit prüfen.<br />
		<br />
		<br />
		10.&nbsp;Bei Bedarf mit @Media-Queries die Templateausgabe auf die jeweiligen Gerätescreens optimieren.<br />
		<br />
		<br />
		11.&nbsp;Redundante Elemente in HTML5 und/oder CSS3 ausmerzen und speichersparend optimieren.<br />
		<br />
		<br />
		12.&nbsp;Wenn das Template weitreichend finalisiert werden kann, sollte nun das Javascript ausgeführt werden.<br />
		<br />
		<br />
		13.&nbsp;Auf diversen Endgeräten die Website testen!!!
		<br />
		<br />
		<br />
		<br />
	</strong>
</p>
<h4><strong>=> FERTIG! Das Template kann nun für ein jeweiliges Framework oder WCMS adaptiert werden :)</strong></h4>
<p>&nbsp;</p>
<div class="cf"></div>
{% partial "markup/backhomelink" %}